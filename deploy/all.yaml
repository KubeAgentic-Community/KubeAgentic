apiVersion: v1
kind: Namespace
metadata:
  name: kubeagentic-system
  labels:
    app.kubernetes.io/name: kubeagentic
    app.kubernetes.io/component: systemapiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: agents.ai.example.com
  labels:
    app.kubernetes.io/name: kubeagentic
    app.kubernetes.io/component: crd
spec:
  group: ai.example.com
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            required:
            - provider
            - model
            - systemPrompt
            - apiSecretRef
            properties:
              provider:
                type: string
                enum:
                - "openai"
                - "gemini" 
                - "claude"
                - "vllm"
                - "ollama"
                description: "LLM provider to use for this agent"
              model:
                type: string
                description: "Specific model to use (e.g., gpt-4, gemini-pro, claude-3)"
              systemPrompt:
                type: string
                description: "System prompt that defines the agent's persona and behavior"
              apiSecretRef:
                type: object
                required:
                - name
                - key
                properties:
                  name:
                    type: string
                    description: "Name of the Kubernetes Secret containing API credentials"
                  key:
                    type: string
                    description: "Key within the secret containing the API key"
                description: "Reference to secret containing LLM provider API credentials"
              endpoint:
                type: string
                description: "Custom endpoint URL for self-hosted models (optional)"
              framework:
                type: string
                enum:
                - "direct"
                - "langgraph"
                default: "direct"
                description: "Agent framework to use for execution"
              langgraphConfig:
                type: object
                properties:
                  graphType:
                    type: string
                    enum:
                    - "sequential"
                    - "parallel"
                    - "conditional"
                    - "hierarchical"
                    description: "Type of LangGraph workflow"
                  nodes:
                    type: array
                    items:
                      type: object
                      required:
                      - name
                      - type
                      properties:
                        name:
                          type: string
                          description: "Node identifier"
                        type:
                          type: string
                          enum:
                          - "llm"
                          - "tool"
                          - "action"
                          description: "Type of node"
                        prompt:
                          type: string
                          description: "Prompt template for LLM nodes"
                        tool:
                          type: string
                          description: "Tool name for tool nodes"
                        action:
                          type: string
                          description: "Action to execute"
                        condition:
                          type: string
                          description: "Condition for conditional execution"
                        inputs:
                          type: array
                          items:
                            type: string
                          description: "Input fields from state"
                        outputs:
                          type: array
                          items:
                            type: string
                          description: "Output fields to state"
                    description: "Workflow nodes definition"
                  edges:
                    type: array
                    items:
                      type: object
                      properties:
                        from:
                          type: string
                          description: "Source node name"
                        to:
                          type: string
                          description: "Target node name"
                        condition:
                          type: string
                          description: "Conditional edge logic"
                    description: "Workflow edges definition"
                  state:
                    type: object
                    description: "State schema for the workflow"
                    x-kubernetes-preserve-unknown-fields: true
                  entrypoint:
                    type: string
                    description: "Entry node for the workflow"
                  endpoints:
                    type: array
                    items:
                      type: string
                    description: "Possible end nodes"
                description: "LangGraph workflow configuration"
              tools:
                type: array
                items:
                  type: object
                  required:
                  - name
                  - description
                  properties:
                    name:
                      type: string
                      description: "Tool identifier"
                    description:
                      type: string
                      description: "Human-readable description of what this tool does"
                    inputSchema:
                      type: object
                      description: "JSON schema describing the tool's input parameters"
                      x-kubernetes-preserve-unknown-fields: true
                description: "Array of tools available to the agent"
              image:
                type: string
                description: "Container image to use for the agent. If not specified, uses operator default"
                pattern: '^[a-zA-Z0-9]([a-zA-Z0-9\-\.\/]*[a-zA-Z0-9])?(:[a-zA-Z0-9]([a-zA-Z0-9\-\.]*[a-zA-Z0-9])?)?(@sha256:[a-fA-F0-9]{64})?$'
              replicas:
                type: integer
                minimum: 1
                maximum: 10
                default: 1
                description: "Number of agent pod replicas to run"
              resources:
                type: object
                properties:
                  requests:
                    type: object
                    properties:
                      memory:
                        type: string
                        default: "256Mi"
                      cpu:
                        type: string
                        default: "100m"
                  limits:
                    type: object
                    properties:
                      memory:
                        type: string
                        default: "512Mi"
                      cpu:
                        type: string
                        default: "200m"
                description: "Resource requests and limits for agent pods"
              serviceType:
                type: string
                enum:
                - "ClusterIP"
                - "NodePort"
                - "LoadBalancer"
                default: "ClusterIP"
                description: "Kubernetes service type for agent endpoint"
          status:
            type: object
            properties:
              phase:
                type: string
                enum:
                - "Pending"
                - "Running" 
                - "Failed"
                - "Succeeded"
                description: "Current phase of the agent deployment"
              message:
                type: string
                description: "Human-readable message about the current state"
              replicaStatus:
                type: object
                properties:
                  ready:
                    type: integer
                    description: "Number of ready replicas"
                  desired:
                    type: integer
                    description: "Number of desired replicas"
                  available:
                    type: integer
                    description: "Number of available replicas"
              lastUpdated:
                type: string
                format: date-time
                description: "Timestamp of last status update"
              conditions:
                type: array
                items:
                  type: object
                  required:
                  - type
                  - status
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                      enum:
                      - "True"
                      - "False"
                      - "Unknown"
                    reason:
                      type: string
                    message:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
    additionalPrinterColumns:
    - name: Provider
      type: string
      jsonPath: .spec.provider
    - name: Model
      type: string
      jsonPath: .spec.model
    - name: Phase
      type: string
      jsonPath: .status.phase
    - name: Ready
      type: string
      jsonPath: .status.replicaStatus.ready
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
    subresources:
      status: {}
  scope: Namespaced
  names:
    plural: agents
    singular: agent
    kind: Agent
    shortNames:
    - ag

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeagentic-operator
  namespace: kubeagentic-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeagentic-operator-role
rules:
- apiGroups:
  - ai.example.com
  resources:
  - agents
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ai.example.com
  resources:
  - agents/finalizers
  verbs:
  - update
- apiGroups:
  - ai.example.com
  resources:
  - agents/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeagentic-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeagentic-operator-role
subjects:
- kind: ServiceAccount
  name: kubeagentic-operator
  namespace: kubeagentic-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeagentic-operator-leader-election
  namespace: kubeagentic-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeagentic-operator-leader-election
  namespace: kubeagentic-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeagentic-operator-leader-election
subjects:
- kind: ServiceAccount
  name: kubeagentic-operator
  namespace: kubeagentic-systemapiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeagentic-operator
  namespace: kubeagentic-system
  labels:
    app.kubernetes.io/name: kubeagentic
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeagentic
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeagentic
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: kubeagentic-operator
      containers:
      - name: operator
        image: kubeagentic/operator:latest
        imagePullPolicy: Always
        args:
        - --leader-elect
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        env:
        - name: AGENT_IMAGE
          value: "kubeagentic/agent:latest"
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        - containerPort: 9443
          name: webhook
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 10