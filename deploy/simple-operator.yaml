# Simplified KubeAgentic Operator Deployment
# Minimal deployment for testing purposes
---
apiVersion: v1
kind: Namespace
metadata:
  name: kubeagentic-system
  labels:
    app.kubernetes.io/name: kubeagentic
    app.kubernetes.io/component: system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: agents.ai.example.com
  labels:
    app.kubernetes.io/name: kubeagentic
    app.kubernetes.io/component: crd
spec:
  group: ai.example.com
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            required:
            - provider
            - model
            - systemPrompt
            - apiSecretRef
            properties:
              provider:
                type: string
                enum: ["openai", "gemini", "claude", "vllm"]
              model:
                type: string
              systemPrompt:
                type: string
              apiSecretRef:
                type: object
                required: ["name", "key"]
                properties:
                  name: { type: string }
                  key: { type: string }
              endpoint: { type: string }
              framework:
                type: string
                enum: ["direct", "langgraph"]
                default: "direct"
              langgraphConfig: { type: object }
              tools:
                type: array
                items:
                  type: object
                  required: ["name", "description"]
                  properties:
                    name: { type: string }
                    description: { type: string }
                    inputSchema: { type: object }
              replicas:
                type: integer
                minimum: 1
                maximum: 10
                default: 1
              resources: { type: object }
              serviceType:
                type: string
                enum: ["ClusterIP", "NodePort", "LoadBalancer"]
                default: "ClusterIP"
          status:
            type: object
            properties:
              phase:
                type: string
                enum: ["Pending", "Running", "Failed"]
              message: { type: string }
              replicaStatus:
                type: object
                properties:
                  ready: { type: integer }
                  desired: { type: integer }
                  available: { type: integer }
              lastUpdated: { type: string, format: date-time }
  scope: Namespaced
  names:
    plural: agents
    singular: agent
    kind: Agent
    shortNames: ["ag"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeagentic-operator
  namespace: kubeagentic-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeagentic-operator-role
rules:
- apiGroups: ["ai.example.com"]
  resources: ["agents", "agents/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeagentic-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeagentic-operator-role
subjects:
- kind: ServiceAccount
  name: kubeagentic-operator
  namespace: kubeagentic-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeagentic-operator
  namespace: kubeagentic-system
  labels:
    app.kubernetes.io/name: kubeagentic
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeagentic
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeagentic
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: kubeagentic-operator
      containers:
      - name: operator
        image: kubeagentic/operator:latest
        imagePullPolicy: Always
        args:
        - --leader-elect
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        ports:
        - containerPort: 8080
          name: metrics
        - containerPort: 8081
          name: health
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
